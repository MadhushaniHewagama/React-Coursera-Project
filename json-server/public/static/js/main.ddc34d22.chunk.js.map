{"version":3,"sources":["shared/dishes.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuCompnent.js","components/HeaderComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/FooterComponent.js","components/Dishdetails.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["DISHES","id","name","image","category","label","price","featured","description","Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","CardImg","width","src","alt","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","About","RenderLeader","leaders","leaders_list","Media","left","object","body","heading","list","CardHeader","title","Footer","RenderDish","top","RenderComments","comments","postComment","dishId","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","selected","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","dishErrMess","promotions","promo","exact","match","parseInt","params","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ddc34d22.chunk.js","sourcesContent":["export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: '/assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        featured: true,\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.'                    \r\n        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: '/assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce'\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: '/assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?'\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: '/assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        featured: false,\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms'\r\n        }\r\n    ];","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish}  />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"row\">\r\n                   \r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n\r\nexport default Menu;","import {\r\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;   ","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n    } else {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{ exitTransform: \"scale(0.5) translateY(-50%)\" }}\r\n            >\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? (\r\n                            <CardSubtitle>{item.designation}</CardSubtitle>\r\n                        ) : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.promotion}\r\n                        isLoading={props.promoLoading}\r\n                        errMess={props.promoErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.leader}\r\n                        isLoading={props.leaderLoading}\r\n                        errMess={props.leaderErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Label\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road\r\n                            <br />\r\n                            Clear Water Bay, Kowloon\r\n                            <br />\r\n                            HONG KONG\r\n                            <br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n                            <br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n                            <br />\r\n                            <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n                            <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a className=\"btn btn-primary\" href=\"tel:+85212345678\" role=\"button\">\r\n                                <i className=\"fa fa-phone\"></i>\r\n                                Call\r\n                            </a>\r\n                            <a className=\"btn btn-info\" role=\"button\">\r\n                                <i className=\"fa fa-skype\"></i>\r\n                                Skype\r\n                            </a>\r\n                            <a className=\"btn btn-success\" href=\"mailto:confusion@food.net\" role=\"button\">\r\n                                <i className=\"fa fa-envelope-o\"></i>\r\n                                Email\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={\r\n                            (values) => this.handleSubmit(values)\r\n                        }>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\"\r\n                                    md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={\r\n                                            {\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15)\r\n                                            }\r\n                                        } />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }\r\n                                        } />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\"\r\n                                    md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators={\r\n                                            {\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15)\r\n                                            }\r\n                                        } />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }\r\n                                        } />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\"\r\n                                    md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                        validators={\r\n                                            {\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15),\r\n                                                isNumber\r\n                                            }\r\n                                        } />\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 numbers',\r\n                                                maxLength: 'Must be 15 numbers or less',\r\n                                                isNumber: 'Must be a number'\r\n                                            }\r\n                                        } />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\"\r\n                                    md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\r\n                                        validators={\r\n                                            { required, validEmail }\r\n                                        } />\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\r\n                                        messages={\r\n                                            {\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email Address'\r\n                                            }\r\n                                        } />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={\r\n                                    {\r\n                                        size: 6,\r\n                                        offset: 2\r\n                                    }\r\n                                }>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox className=\"form-check-input\" model=\".agree\" name=\"agree\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={\r\n                                    {\r\n                                        size: 3,\r\n                                        offset: 1\r\n                                    }\r\n                                }>\r\n                                    <Control.select className=\"form-control\" model=\".contactType\" name=\"contactType\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\"\r\n                                    md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea className=\"form-control\" id=\"message\" model=\".message\" name=\"message\" rows=\"12\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={\r\n                                    {\r\n                                        size: 10,\r\n                                        offset: 2\r\n                                    }\r\n                                }>\r\n                                    <Button color=\"primary\" type=\"submit\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Media\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\nfunction About(props) {\r\n    const RenderLeader = ({ leaders, leaderLoading, leaderErrMess }) => {\r\n        console.log(leaderLoading, leaderErrMess);\r\n\r\n        const leaders_list = leaders.map(leader => {\r\n            return (\r\n                <Fade in key={leader.id}>\r\n                    <Media>\r\n                        <Media left>\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-2\">\r\n                            <Media heading>{leader.name}</Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n                </Fade>\r\n            );\r\n        });\r\n        // Returning the complete leader's list\r\n        if (leaderLoading) {\r\n            return <Loading />;\r\n        } else if (leaderErrMess) {\r\n            return <h4>{leaderErrMess}</h4>;\r\n        } else\r\n            return (\r\n                <Media list>\r\n                    <Stagger in>{leaders_list}</Stagger>\r\n                </Media>\r\n            );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>\r\n                        Started in 2010, Ristorante con Fusion quickly established itself as\r\n                        a culinary icon par excellence in Hong Kong. With its unique brand\r\n                        of world fusion cuisine that can be found nowhere else, it enjoys\r\n                        patronage from the A-list clientele in Hong Kong. Featuring four of\r\n                        the best three-star Michelin chefs in the world, you never know what\r\n                        will arrive on your plate the next time you visit us.\r\n          </p>\r\n                    <p>\r\n                        The restaurant traces its humble beginnings to{\" \"}\r\n                        <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">\r\n                            Facts At a Glance\r\n            </CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">\r\n                                    You better cut the pizza in four pieces because I'm not hungry\r\n                                    enough to eat six.\r\n                </p>\r\n                                <footer className=\"blockquote-footer\">\r\n                                    Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                                        The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                                        2014\r\n                  </cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <RenderLeader\r\n                        leaders={props.leaders}\r\n                        leaderLoading={props.isLoading}\r\n                        leaderErrMess={props.errMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Label, Col, Row, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <FadeTransform\r\n        in\r\n        transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n    <Card>\r\n        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n        </CardBody>\r\n    </Card>\r\n    </FadeTransform>\r\n    )\r\n\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    const cmnts = comments.map(comment => {\r\n        return (\r\n            <Stagger in>\r\n            {comments.map((comment) => {\r\n                return (\r\n                    <Fade in>\r\n                    <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                    </Fade>\r\n                );\r\n            })}\r\n            </Stagger>\r\n        )\r\n    })\r\n    return (\r\n        <div className='col-12 col-md-5 m-1'>\r\n            <h4> Comments </h4>\r\n            <ul className='list-unstyled'>\r\n                {cmnts}\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n   else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rate</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option value={1} selected>1</option>\r\n                                        <option value={2}>2</option>\r\n                                        <option value={3}>3</option>\r\n                                        <option value={4}>4</option>\r\n                                        <option value={5}>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea rows=\"6\" model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        placeholder=\"Comment\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".comment\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button className='mt-2' type=\"submit\" color=\"primary\" toggle={this.toggleModal}>\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Button outline className='ml-3' color=\"info\" onClick={this.toggleModal}>\r\n                    <span className='fa fa-pencil'></span> Submit Comment\r\n                    </Button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default DishDetail;","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = comment => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + \"comments\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(\r\n            response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                throw error;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log(\"post comments\", error.message);\r\n            alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n        });\r\n};\r\n\r\nexport const fetchDishes = () => dispatch => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + \"dishes\")\r\n        .then(\r\n            response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = errmess => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = dishes => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n    return fetch(baseUrl + \"comments\")\r\n        .then(\r\n            response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errmess => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => dispatch => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + \"promotions\")\r\n        .then(\r\n            response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = errmess => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = promos => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + \"leaders\")\r\n        .then(\r\n            response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n) => dispatch => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n\r\n    return fetch(baseUrl + \"feedback\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(\r\n            response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                throw error;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response =>\r\n            alert(\"Thank for submitting feedback!\" + JSON.stringify(response))\r\n        )\r\n        .catch(error => {\r\n            console.log(\"post feedbacks\", error.message);\r\n            alert(\"Your feedback could not be posted!\\nError: \" + error.message);\r\n        });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React, { Component } from \"react\";\r\nimport Menu from \"./MenuCompnent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport DishDetail from \"./Dishdetails\";\r\nimport {\r\n    postComment,\r\n    fetchDishes,\r\n    fetchComments,\r\n    fetchPromos,\r\n    fetchLeaders,\r\n    postFeedback\r\n} from \"../redux/ActionCreators\";\r\n\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) =>\r\n        dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n    ) =>\r\n        dispatch(\r\n            postFeedback(\r\n                firstname,\r\n                lastname,\r\n                telnum,\r\n                email,\r\n                agree,\r\n                contactType,\r\n                message\r\n            )\r\n        ),\r\n    fetchDishes: () => {\r\n        dispatch(fetchDishes());\r\n    },\r\n    resetFeedbackForm: () => {\r\n        dispatch(actions.reset(\"feedback\"));\r\n    },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    };\r\n};\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n    onDishSelect(dishId) {\r\n        this.setState({ selectedDish: dishId });\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={\r\n                        this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n                    }\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={\r\n                        this.props.leaders.leaders.filter(leader => leader.featured)[0]\r\n                    }\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        };\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail\r\n                    dish={\r\n                        this.props.dishes.dishes.filter(\r\n                            dish => dish.id === parseInt(match.params.dishId, 10)\r\n                        )[0]\r\n                    }\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter(\r\n                        comment => comment.dishId === parseInt(match.params.dishId, 10)\r\n                    )}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n        const AboutPage = () => {\r\n            return (\r\n                <About\r\n                    leaders={this.props.leaders.leaders}\r\n                    isLoading={this.props.leaders.isLoading}\r\n                    errMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition\r\n                        key={this.props.location.key}\r\n                        classNames=\"page\"\r\n                        timeout={300}\r\n                    >\r\n                        <Switch location={this.props.location}>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route\r\n                                exact\r\n                                path=\"/menu\"\r\n                                component={() => <Menu dishes={this.props.dishes} />}\r\n                            />\r\n                            <Route\r\n                                exact\r\n                                path=\"/contactus\"\r\n                                component={() => (\r\n                                    <Contact\r\n                                        resetFeedbackForm={this.props.resetFeedbackForm}\r\n                                        postFeedback={this.props.postFeedback}\r\n                                    />\r\n                                )}\r\n                            />\r\n\r\n                            <Route path=\"/aboutus\" component={AboutPage} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        // comment.id = state.comments.length;\r\n        // comment.date = new Date().toISOString();\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: null,\r\n                leaders: action.payload\r\n            };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                errMess: null,\r\n                leaders: []\r\n            }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React ,{ Component } from 'react';\nimport './App.css';\nimport { DISHES } from './shared/dishes';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dishes: DISHES\n    };\n  }\n    render(){\n      return (\n        <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n      );\n    }\n  }\n\nexport default App;\n\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\n\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}